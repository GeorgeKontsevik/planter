"""added specialists as a separate table related to project

Revision ID: 65c744f2131c
Revises: 8c438d08645b
Create Date: 2024-11-30 23:59:30.940073

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '65c744f2131c'
down_revision: Union[str, None] = '8c438d08645b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_specialists')
    op.add_column('specialists', sa.Column('count', sa.Integer(), nullable=True))
    op.add_column('specialists', sa.Column('project_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'specialists', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'specialists', type_='foreignkey')
    op.drop_column('specialists', 'project_id')
    op.drop_column('specialists', 'count')
    op.create_table('project_specialists',
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('specialist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_specialists_project_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], name='project_specialists_specialist_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'specialist_id', name='project_specialists_pkey')
    )
    # ### end Alembic commands ###
